pipeline {
    agent any
    
    // Use configured tools from Global Tools
    tools {
        maven 'Maven-3.9'
    }
    
    environment {
        SERVICE_NAME = 'user-service'
        MAVEN_OPTS = '-Xmx512m'  // Reduced for local development
        JAVA_HOME = sh(script: '/usr/libexec/java_home -v 11', returnStdout: true).trim()
        MAVEN_HOME = "${HOME}/.jenkins/tools/hudson.tasks.Maven_MavenInstallation/Maven-3.9"
        PATH = "${JAVA_HOME}/bin:${MAVEN_HOME}/bin:/opt/homebrew/bin:/usr/local/bin:${PATH}"
    }
    
    stages {
        stage('Checkout') {
            // Run on all branches except main and develop
            when {
                not {
                    anyOf {
                        branch 'main'
                        branch 'develop'
                    }
                }
            }
            steps {
                echo "Starting development build for ${SERVICE_NAME}"
                echo "Branch: ${env.BRANCH_NAME}"
                echo "Build: ${env.BUILD_NUMBER}"
                echo "Target: Development validation only (Minikube)"
                
                // Clean workspace
                cleanWs()
                
                // Checkout source code
                checkout scm
                
                // Verify tools are available
                sh '''
                    echo "=== Tool Verification ==="
                    java -version
                    mvn -version
                    minikube status || echo "Minikube not running - OK for development validation"
                '''
            }
        }
        
        stage('Build Application') {
            when {
                not {
                    anyOf {
                        branch 'main'
                        branch 'develop'
                    }
                }
            }
            steps {
                dir(SERVICE_NAME) {
                    sh 'mvn clean compile -q'
                }
            }
        }
        
        stage('Unit Tests') {
            when {
                not {
                    anyOf {
                        branch 'main'
                        branch 'develop'
                    }
                }
            }
            steps {
                dir(SERVICE_NAME) {
                    sh 'mvn test -q'
                }
            }
            post {
                always {
                    // Publish test results
                    junit testResults: "${SERVICE_NAME}/target/surefire-reports/TEST-*.xml",
                          allowEmptyResults: true
                }
            }
        }
        
        stage('Package Application') {
            when {
                not {
                    anyOf {
                        branch 'main'
                        branch 'develop'
                    }
                }
            }
            steps {
                dir(SERVICE_NAME) {
                    sh 'mvn package -DskipTests -q'
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
        
        success {
            echo """
DEVELOPMENT BUILD SUCCESS
Build Summary:
- Unit tests: PASSED
- Package validation: PASSED

Ready for merge to develop branch.
            """
        }
        
        failure {
            echo "DEVELOPMENT BUILD FAILED - Fix issues before merging to develop"
        }
        
        unstable {
            echo "Development build is unstable"
            echo "Some tests may have failed - please review"
        }
    }
} 